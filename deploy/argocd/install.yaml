# ArgoCD Installation with Management Node Affinity
apiVersion: v1
kind: Namespace
metadata:
  name: argocd
---
# ArgoCD Base Installation
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-install
  namespace: argocd
data:
  install.sh: |
    #!/bin/bash
    kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
    
    # Patch ArgoCD components for management node affinity
    kubectl patch deployment argocd-server -n argocd -p '{"spec":{"template":{"spec":{"nodeSelector":{"doks.digitalocean.com/node-pool":"management"}}}}}'
    kubectl patch deployment argocd-repo-server -n argocd -p '{"spec":{"template":{"spec":{"nodeSelector":{"doks.digitalocean.com/node-pool":"management"}}}}}'
    kubectl patch deployment argocd-controller -n argocd -p '{"spec":{"template":{"spec":{"nodeSelector":{"doks.digitalocean.com/node-pool":"management"}}}}}'
    kubectl patch deployment argocd-redis -n argocd -p '{"spec":{"template":{"spec":{"nodeSelector":{"doks.digitalocean.com/node-pool":"management"}}}}}'
    kubectl patch deployment argocd-dex-server -n argocd -p '{"spec":{"template":{"spec":{"nodeSelector":{"doks.digitalocean.com/node-pool":"management"}}}}}'
    
    # Resource optimization for s-1vcpu-2gb nodes
    kubectl patch deployment argocd-server -n argocd -p '{"spec":{"template":{"spec":{"containers":[{"name":"argocd-server","resources":{"requests":{"memory":"128Mi","cpu":"50m"},"limits":{"memory":"256Mi","cpu":"200m"}}}]}}}}'
    kubectl patch deployment argocd-controller -n argocd -p '{"spec":{"template":{"spec":{"containers":[{"name":"argocd-application-controller","resources":{"requests":{"memory":"256Mi","cpu":"100m"},"limits":{"memory":"512Mi","cpu":"500m"}}}]}}}}'
---
apiVersion: batch/v1
kind: Job
metadata:
  name: argocd-installer
  namespace: argocd
spec:
  template:
    spec:
      serviceAccountName: argocd-installer
      containers:
      - name: installer
        image: bitnami/kubectl:latest
        command: ["/bin/bash", "/scripts/install.sh"]
        volumeMounts:
        - name: install-script
          mountPath: /scripts
      volumes:
      - name: install-script
        configMap:
          name: argocd-install
          defaultMode: 0755
      restartPolicy: OnFailure
      nodeSelector:
        doks.digitalocean.com/node-pool: management
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-installer
  namespace: argocd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-installer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: argocd-installer
  namespace: argocd